{"name":"autoFormly","tagline":"Create angular-formly forms with automatic insert and update, and automatic reactive validation. Requires SimpleSchema or Collection2","body":"AutoFormly [![Build Status](https://travis-ci.org/wieldo/meteor-autoformly.svg)](https://travis-ci.org/wieldo/meteor-autoformly) [![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/wieldo/meteor-autoformly?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\r\n==========\r\nCreate [Angular-Formly] forms with automatic insert and update, and automatic reactive validation. Requires [SimpleSchema] or [Collection2].\r\n\r\n## How to use it\r\n\r\n```javascript\r\nconst fields = autoFormly.collection(BooksCollection);\r\n// or\r\nconst fields = autoFormly.schema(BooksSchema);\r\n```\r\n\r\n## What is ready?\r\nTake a look at this docs:\r\n\r\n- [autoFormly]\r\n- [autoFormlyParsers]\r\n\r\n## Contribution\r\nIt is a new project, at the beginning of development process.\r\n\r\nFeel free to ask me anything.\r\n\r\n### You can help\r\nIf you would like to add functionality, just fork this repo and create pull request.\r\n\r\n### How autoFormly works\r\nBasically it parses simpleSchema structure and creates formly configuration for each field.\r\n\r\nFor example, to mark field as required we can create the parser function to check if `optional` property is being used.\r\nIf _opional_ is not set to _true_ then we're adding `required` validator from `wieldo:angular-formly-validator` package \r\n(see [formlyValidator] and source code in [required.js](lib/client/parsers/validators/required.js).\r\n\r\n#### What is parser?\r\nParser is a function that receives simpleSchema key with configuration and reference to formly field configuration object.\r\n\r\nSo basically, you can add properties to formly configuration by checking field's schema.\r\n\r\n#### Helpers\r\nWe're currently working on three other packages that are very useful in autoFormly.\r\n\r\n- [formlyTransformer] to simplify process of formly field transformation.\r\n- [formlyValidator] to make validation easier (with built-in validators)\r\n- [formlyMaterial] is a AngularJS module with Angular Material templates to use in angular-formly.\r\n\r\n## Contact\r\nYou can find me on [Gitter].\r\n\r\n\r\n[Angular-Formly]: http://angular-formly.com\r\n[SimpleSchema]: http://github.com/aldeed/meteor-simple-schema\r\n[Collection2]: http://github.com/aldeed/meteor-collection2\r\n[AutoForm]: http://github.com/aldeed/meteor-autoform\r\n[Gitter]: https://gitter.im/wieldo/meteor-autoformly\r\n\r\n[autoFormly]: docs/auto-formly.md\r\n[autoFormlyParsers]: docs/auto-formly-parsers.md\r\n\r\n[formlyValidator]: http://github.com/wieldo/angular-formly-validator\r\n[formlyTransformer]: http://github.com/wieldo/angular-formly-transformer\r\n[formlyMaterial]: http://github.com/wieldo/angular-formly-templates-material","google":"UA-69932737-4","note":"Don't delete this file! It's used internally to help with page regeneration."}