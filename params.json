{"name":"autoFormly","tagline":"Create angular-formly forms with automatic insert and update, and automatic reactive validation. Requires SimpleSchema or Collection2","body":"AutoFormly\r\n==========\r\n\r\n[![GitHub version](https://badge.fury.io/gh/wieldo%2Fmeteor-autoformly.svg)](https://badge.fury.io/gh/wieldo%2Fmeteor-autoformly)\r\n[![Build Status](https://travis-ci.org/wieldo/meteor-autoformly.svg)](https://travis-ci.org/wieldo/meteor-autoformly) \r\n[![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/wieldo/meteor-autoformly?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\r\n[![Coverage Status](https://coveralls.io/repos/wieldo/meteor-autoformly/badge.svg?branch=master&service=github)](https://coveralls.io/github/wieldo/meteor-autoformly?branch=master)\r\n[![Codacy Badge](https://api.codacy.com/project/badge/grade/b55750daf3c6417caf63154da85a9eae)](https://www.codacy.com/app/mys-sterowiec/meteor-autoformly)\r\n\r\nCreate [Angular-Formly] forms with automatic insert and update, and automatic reactive validation. Requires [SimpleSchema] or [Collection2].\r\n\r\n## Installation\r\n\r\n```\r\nmeteor add wieldo:autoformly\r\n```\r\n\r\n## How to use it\r\n\r\n\r\n### Convert all schema fields\r\n\r\n```javascript\r\nconst fields = autoFormly.collection(BooksCollection);\r\n// or\r\nconst fields = autoFormly.collection($meteor.collection(BooksCollection);\r\n// or\r\nconst fields = autoFormly.schema(BooksSchema);\r\n```\r\n\r\n### Save object to collection with validation error handling\r\n\r\n```javascript\r\nconst fields = autoFormly.collection(BooksCollection);\r\n\r\nfunction submit(book) {\r\n    $meteor.collection(BooksCollection)\r\n        .save(book)\r\n        .then(() => {\r\n            // success\r\n        })\r\n        .catch(() => autoFormly.errors(BooksCollection, fields);\r\n}\r\n```\r\n\r\n### Convert all schema fields excluding one\r\n```javascript\r\nconst fields = autoFormly.schema(BooksSchema, {\r\n    fields: {\r\n        published: false\r\n    }\r\n});\r\n```\r\n\r\n### Convert selected collection fields\r\n```javascript\r\nconst fields = autoFormly.collection(BooksCollection, {\r\n    all: false,\r\n    fields: {\r\n        published: true,\r\n        author: true,\r\n        title: true\r\n    }\r\n});\r\n```\r\n\r\n### Extend formly configuration for selected field\r\n\r\n```javascript\r\nconst fields = autoFormly.schema(BooksSchema, {\r\n    all: false,\r\n    fields: {\r\n        published: true,\r\n        author: {\r\n            templateOptions: {\r\n                label: \"Written by\"\r\n            }\r\n        }\r\n    }\r\n});\r\n```\r\n\r\n## What is ready?\r\n\r\nSee examples above.\r\n\r\n- creating formly fields with validators using collection or schema (autoFormly.collection(), autoFormly.schema())\r\n- handling validation errors (autoFormly.error() sets validation on form fields)\r\n\r\nTake a look at this docs:\r\n\r\n- [autoFormly]\r\n- [autoFormlyParsers]\r\n\r\n## Contributing\r\nIt is a new project, at the beginning of development process.\r\n\r\nFeel free to ask me anything.\r\n\r\n### You can help\r\nIf you would like to add functionality, just fork this repo and create pull request.\r\n\r\n### How autoFormly works\r\nBasically it parses simpleSchema structure and creates formly configuration for each field.\r\n\r\nFor example, to mark field as required we can create the parser function to check if `optional` property is being used.\r\nIf _opional_ is not set to _true_ then we're adding `required` validator from `wieldo:angular-formly-validator` package \r\n(see [formlyValidator] and source code in [required.js](lib/client/parsers/validators/required.js).\r\n\r\n#### What is parser?\r\nParser is a function that receives simpleSchema key with configuration and reference to formly field configuration object.\r\n\r\nSo basically, you can add properties to formly configuration by checking field's schema.\r\n\r\n#### Helpers\r\nWe're currently working on three other packages that are very useful in autoFormly.\r\n\r\n- [formlyTransformer] to simplify process of formly field transformation.\r\n- [formlyValidator] to make validation easier (with built-in validators)\r\n- [formlyMaterial] is a AngularJS module with Angular Material templates to use in angular-formly.\r\n\r\n### Roadmap 1.0\r\n\r\n- [x] Extend SimpleSchema to use `autoformly` property\r\n- [x] Add optional manual formly configuration for each field\r\n- [x] More advanced field filtering (show all / hide all / add excluding)\r\n- [x] `schema.key` as `formly.key`\r\n- [x] `schema.label` as `formly.templateOptions.label`\r\n- [x] `schema.optional` and required validator\r\n- [x] `schema.max` for **_String_** and **_Number_** types as **maxlength** and **maxnumber** validator\r\n- [x] `schema.min` for **_String_** and **_Number_** types as **minlength** and **minnumber** validator\r\n- [x] `schema.regEx` as **pattern** validator\r\n- [x] `schema.defaultValue` as `formly.defaultValue`\r\n- [x] `schema.autoformly.templateOptions.rows` to be displayed as textarea\r\n- [x] **_Boolean_** type as checkbox\r\n- [x] `schema.autoformly.type` to be `formly.type`\r\n- [x] `schema.allowedValues` as select element (schema type is a String) \r\n- [ ] `schema.minCount` and `schema.maxCount` support\r\n- [ ] Support for **_array of objects_**\r\n- [ ] Support for **_Object_** type fields\r\n- [x] Support for server-side validation errors (like _unique_)\r\n- [ ] Interactive **demo**\r\n\r\n## Contact\r\nYou can find me on [Gitter].\r\n\r\n\r\n[Angular-Formly]: http://angular-formly.com\r\n[SimpleSchema]: http://github.com/aldeed/meteor-simple-schema\r\n[Collection2]: http://github.com/aldeed/meteor-collection2\r\n[AutoForm]: http://github.com/aldeed/meteor-autoform\r\n[Gitter]: https://gitter.im/wieldo/meteor-autoformly\r\n\r\n[autoFormly]: docs/auto-formly.md\r\n[autoFormlyParsers]: docs/auto-formly-parsers.md\r\n\r\n[formlyValidator]: http://github.com/wieldo/angular-formly-validator\r\n[formlyTransformer]: http://github.com/wieldo/angular-formly-transformer\r\n[formlyMaterial]: http://github.com/wieldo/angular-formly-templates-material","google":"UA-69932737-4","note":"Don't delete this file! It's used internally to help with page regeneration."}